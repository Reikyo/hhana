#!/usr/bin/env python

from mva import save_canvas, log; log = log[__name__]
from statstools.pvalue_plot import pvalue_plot
from rootpy.plotting import Canvas, Legend, Graph, Hist, get_style, set_style
from rootpy.plotting.utils import draw
from rootpy.plotting.style.atlas.labels import ATLAS_label
import pickle
import os
from ROOT import TLine

style = get_style('ATLAS', shape='square')
style.SetPadLeftMargin(0.16)
style.SetTitleYOffset(1.4)
set_style(style)
#mva_path = 'workspaces/pulls/mva/ws_measurement_hh_combination_125_nuispars_scan_nofit.pickle'
#cba_path = 'workspaces/pulls/cba/ws_measurement_hh_full_combination_125_nuispars_scan_nofit.pickle'

mva_path = './workspaces/22_05_2014/hh_nos_nonisol_ebz_mva_fixed/hh_combination_125/ws_measurement_hh_combination_125_nuispars_scan.pickle'
mva_path_12_vbf = './workspaces/22_05_2014/hh_nos_nonisol_ebz_mva_fixed/hh_12_vbf_125/ws_measurement_hh_12_vbf_125_nuispars_scan.pickle'
mva_path_11_vbf = './workspaces/22_05_2014/hh_nos_nonisol_ebz_mva_fixed/hh_11_vbf_125/ws_measurement_hh_11_vbf_125_nuispars_scan.pickle'
mva_path_12_boosted = './workspaces/22_05_2014/hh_nos_nonisol_ebz_mva_fixed/hh_12_boosted_125/ws_measurement_hh_12_boosted_125_nuispars_scan.pickle'
mva_path_11_boosted = './workspaces/22_05_2014/hh_nos_nonisol_ebz_mva_fixed/hh_11_boosted_125/ws_measurement_hh_11_boosted_125_nuispars_scan.pickle'
cba_path = '/cluster/data11/endw/analysis/HSG4/htt/workspaces/pulls/cba/ws_measurement_hh_full_combination_125_nuispars_scan_nofit.pickle'

line = TLine()
line.SetLineStyle(7)
line.SetLineWidth(2)


def plot(name, graphs):
    c = Canvas()
    xaxis, yaxis = c.axes(xlimits=(-3, 3), ylimits=(-1, 10))
    # draw guide lines
    line.DrawLine(-3, 0, 3, 0)
    line.DrawLine(-3, 1, 3, 1)
    draw(graphs, pad=c, snap=False, ypadding=0, same=True,
         xaxis=xaxis, yaxis=yaxis,
         xtitle=name, ytitle='2#Delta[-log(L)]',
         xlimits=(-3, 3), ylimits=(-1, 10))
    leg = Legend(graphs, leftmargin=0.4,
                 topmargin=0.1, margin=0.15,
                 textsize=20)
    leg.Draw()
    ATLAS_label(0.68, 0.88, text="Internal", sqrts=None, pad=c, sep=0.12)
    save_canvas(c, 'plots/nuis', name, formats=('.eps', '.png'))


def get_data(pickle_file):
    with open(pickle_file) as f:
        data = pickle.load(f)
    return data


def make_graph(values, nominal, max_value=8, **kwargs):
    graph = Graph(len(values), **kwargs)    
    i = 0
    for x, y in values:
        value = 2 * (y - nominal)
        # nan?
        if value != value:
            continue
        if value > max_value:
            continue
        graph[i] = (x, value)
        i += 1
    graph.num_points = i
    return graph


mva_data = get_data(mva_path)
mva_data_vbf_12 = get_data(mva_path_12_vbf)
mva_data_vbf_11 = get_data(mva_path_11_vbf)
mva_data_boosted_12 = get_data(mva_path_12_boosted)
mva_data_boosted_11 = get_data(mva_path_11_boosted)
cba_data = get_data(cba_path)

mva_nominal_nll = mva_data['NOMINAL']
mva_nominal_nll_vbf_12 = mva_data_vbf_12['NOMINAL']
mva_nominal_nll_vbf_11 = mva_data_vbf_11['NOMINAL']
mva_nominal_nll_boosted_12 = mva_data_boosted_12['NOMINAL']
mva_nominal_nll_boosted_11 = mva_data_boosted_11['NOMINAL']

cba_nominal_nll = cba_data['NOMINAL']

# plot profiles of each NP
for nuis, mva_values in mva_data.items():
    log.info(nuis)
    if nuis == 'NOMINAL':
        continue
    try:
        #         cba_values = cba_data[nuis]
        mva_values_vbf_12 = mva_data_vbf_12[nuis]
        mva_values_boosted_12 = mva_data_boosted_12[nuis]
        mva_values_vbf_11 = mva_data_vbf_11[nuis]
        mva_values_boosted_11 = mva_data_boosted_11[nuis]
    except KeyError:
        log.info('Do not play with {0}'.format(nuis))
        continue
    mva_graph = make_graph(mva_values, mva_nominal_nll, drawstyle='L',
                           linewidth=2, title='MVA Combined')
    mva_graph_vbf_12 = make_graph(mva_values_vbf_12, mva_nominal_nll_vbf_12, drawstyle='L',
                                  linewidth=2, color='green', linestyle='dashed', title='MVA VBF 2012')
    mva_graph_boosted_12 = make_graph(mva_values_boosted_12, mva_nominal_nll_boosted_12, drawstyle='L',
                                      linewidth=2, color='red', linestyle='dashed', title='MVA Boosted 2012')
    mva_graph_vbf_11 = make_graph(mva_values_vbf_11, mva_nominal_nll_vbf_11, drawstyle='L',
                                  linewidth=2, color='blue', linestyle='longdash', title='MVA VBF 2011')
    mva_graph_boosted_11 = make_graph(mva_values_boosted_11, mva_nominal_nll_boosted_11, drawstyle='L',
                                      linewidth=2, color='purple', linestyle='longdash', title='MVA Boosted 2011')

#     mva_graph_vbf_11 = make_graph(mva_values, mva_nominal_nll_vbf_11, drawstyle='L',
#                                   linewidth=2, title='MVA VBF 2011')
#     mva_graph_boosted_11 = make_graph(mva_values, mva_nominal_nll_boosted_11, drawstyle='L',
#                                       linewidth=2, title='MVA Boosted 2011')
#     cba_graph = make_graph(cba_values, cba_nominal_nll, drawstyle='L',
#                            linewidth=2, linestyle='dashed', color='red',
#                            title='CBA')
#     plot(nuis, [mva_graph, cba_graph])
#     plot(nuis+'_2012', [mva_graph, mva_graph_vbf_12, mva_graph_boosted_12])
#     plot(nuis+'_2011', [mva_graph, mva_graph_vbf_11, mva_graph_boosted_11])
    plot(nuis, [mva_graph, mva_graph_vbf_12, mva_graph_boosted_12, mva_graph_vbf_11, mva_graph_boosted_11])
#     plot(nuis, [mva_graph, mva_graph_vbf_12, mva_graph_boosted_12])
