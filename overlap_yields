#!/usr/bin/env python

# -- Create by Quentin Buat quentin(dot)buat(at)cern(dot)ch
# create an ntuple containing trees for data events in the overlap between cutbased and mva
# with classifier scores
# and event weights

from mva.cmd import get_parser

# args = get_parser(actions=False).parse_args()
args = get_parser(actions=False).parse_args()

from mva.analysis import get_analysis
from mva.plotting import draw_channel_array
from mva.variables import VARIABLES,WEIGHTS

analysis = get_analysis(args)
output_suffix = analysis.get_suffix()

from rootpy.io import root_open
from rootpy.tree import Cut
from rootpy.plotting import Hist

import numpy as np
from numpy.lib import recfunctions
from root_numpy import array2tree


fields = [ 'RunNumber','EventNumber','mmc1_mass','weight']

target_region = args.target_region
data    = analysis.data
signals = analysis.signals
backgrounds = analysis.backgrounds

# loop over the overlap categories (defined in mva/categories/__init__.py)
for category in analysis.iter_categories(
        args.categories, args.controls, names=args.category_names):

    if category.analysis_control:
        continue
    

    # get the data record array
    rec = data.merged_records(
        category, target_region, fields=fields, include_weight=False)


    print category.name,'data',len(rec)
    # Iterate over all the signals+background samples
    for sample in signals+backgrounds:
        # get the sample record array
        rec_sample = sample.merged_records( category,
                                            target_region,
                                            fields=fields,
                                            include_weight=True )
        print category.name,sample.name,rec_sample['weight'].sum()



