#!/usr/bin/env python

from ROOT import TLatex
from rootpy.plotting import Hist, Canvas
from rootpy.plotting.utils import draw
from root_numpy import fill_hist
from mva.samples import Embedded_Ztautau, Data
from mva import save_canvas
from mva.categories import Category_Preselection
import numpy as np


def draw_array(array, field, year, data_info):
    canvas = Canvas()
    xmin, xmax = array.min(), array.max()
    width = xmax - xmin
    hist = Hist(30, xmin - width / 4, xmax + width / 4,
                drawstyle='hist', linewidth=2)
    fill_hist(hist, array)
    logy = array.std() < 0.1 * width
    draw(hist, canvas, ytitle='Events', xtitle=field,
            xdivisions=507, logy=logy, logy_crop_value=1,
            ypadding=(0.25, 0))
    label.DrawLatex(0.45, 0.85, str(data_info))
    save_canvas(canvas, 'plots/weights',
                'emb_ztt_weight_{0}_{1}'.format(field, year % 1000),
                formats=('eps', 'png'))


for year in (2011, 2012):
    data = Data(year=year)
    label = TLatex()
    label.SetNDC()
    label.SetTextFont(43)
    label.SetTextSize(22)
    ztt = Embedded_Ztautau(year=year)
    weights = ztt.weights()
    rec = ztt.merged_records(category=Category_Preselection, fields=weights)
    # draw product
    product = reduce(np.multiply, [rec[field] for field in weights])
    draw_array(product, 'product', year, data.info)
    # normalize weight field
    rec['weight'] *= product.max() / rec['weight'].max()
    for field in weights + ['weight']:
        array = rec[field]
        draw_array(array, field, year, data.info) 
