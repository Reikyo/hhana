#!/usr/bin/env python

import sys
from mva import cmd
from mva.samples import Higgs
from mva.workspace import write_workspaces, cuts_workspace, mva_workspace
from mva.analysis import get_analysis

parser = cmd.analysis_parser(cmd.general_parser(
    multi_years=True, multi_categories=True))
parser.add_argument('type', choices=('mva', 'cuts'), default='mva')
args = parser.parse_args()

if args.masses == 'all':
    args.masses = Higgs.MASSES
else:
    args.masses = map(int, args.masses.split(','))

if args.type == 'mva':
    workspace_func = mva_workspace
else:
    workspace_func = cuts_workspace

years = args.years
categories = args.categories
if len(categories) == 1 and len(years) > 1:
    categories = categories * len(years)
elif len(categories) != len(years):
    sys.exit("specify the same number of category definitions as years")

signal_regions = {}
control_regions = {}
for year, year_categories in zip(years, categories):
    analysis = get_analysis(args, year=year)
    sr, cr = workspace_func(analysis, year_categories, args.masses,
                            unblind=args.unblind,
                            systematics=args.systematics)
    signal_regions[year] = sr
    control_regions[year] = cr

suffix = analysis.get_suffix(year=False)
suffix += '_' + args.type
if args.output_suffix:
    suffix += '_' + args.output_suffix
path = 'workspaces/hh{0}'.format(suffix.lower())
write_workspaces(path, 'hh', signal_regions, controls=control_regions)
