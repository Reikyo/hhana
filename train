#!/usr/bin/env python

from rootpy.extern.argparse import ArgumentParser

parser = ArgumentParser()
parser.add_argument('--nfold', type=int, default=10,
    help='the number of folds in the cross-validation')
parser.add_argument('--mass', type=int, default=125, choices=range(100, 155, 5))
parser.add_argument('--categories', nargs='*')
parser.add_argument('--suffix', default=None)
parser.add_argument('--procs', type=int, default=-1)
args = parser.parse_args()

from mva.categories import (
    Category_Preselection, Category_VBF, Category_Boosted)
from mva.analysis import Analysis
from mva.samples import Higgs
from mva.defaults import TRAIN_FAKES_REGION

analysis = Analysis(
    year=2012,
    systematics=False,
    fakes_region=TRAIN_FAKES_REGION,
    suffix=args.suffix)
analysis.normalize(Category_Preselection)

# combine embedded and MC Ztt for training
# TODO: account for the fact that N(MC) != N(EMB)
#analysis_eb = get_analysis(args, embedding=True)
#analysis_mc = get_analysis(args, embedding=False)
#analysis_eb.normalize(category)
#analysis_mc.normalize(category)
#analysis_eb.ztautau.scale *= 0.5
#analysis_mc.ztautau.scale *= 0.5
#backgrounds_train = [
#    analysis_eb.ztautau,
#    analysis_mc.ztautau,
#    analysis.others,
#    analysis.qcd,
#]

backgrounds_train = analysis.backgrounds

for category in (Category_VBF, Category_Boosted):
    if args.categories and category.name not in args.categories:
        continue

    signals_train = [
        Higgs(year=2012,
              mass=args.mass,
              modes=category.train_signal_modes,
              trigger=True),
        ]
    # NOTE: used trigger=False, but this adds too many events with
    # small weights and when the signal is cropped to the size of the
    # background sample you are possibly left with many low-weight
    # events vs a few high-weight events, therefore spiky
    # distributions...

    clf = analysis.get_clf(category, load=False, mass=args.mass)
    clf.train(signals=signals_train,
              backgrounds=backgrounds_train,
              remove_negative_weights=True,
              same_size_sig_bkg=False,
              cv_nfold=args.nfold,
              n_jobs=args.procs)
