#!/usr/bin/env python

from statstools.pvalue_plot import pvalue_plot
from rootpy.plotting import Canvas, Legend, set_style
from rootpy.plotting.style.atlas.labels import ATLAS_label
import pickle
import os
import ROOT

set_style('ATLAS', shape='rect')
gaus_cdf = ROOT.Math.gaussian_cdf_c

bdt_path = 'workspaces/hh_nos_nonisol_ebz_mva_fixed'
cuts_path = 'workspaces/hh_nos_nonisol_ebz_cuts_fixed'
masses = range(100, 155, 5)


def get_sigs(path, category, year=None):
    if year is None:
        dir_pattern = 'hh_{0}_{{0}}'.format(category)
    else:
        dir_pattern = 'hh_{0}_{1}_{{0}}'.format(year % 1000, category)
    sigs = []
    for mass in masses:
        dirname = dir_pattern.format(mass)
        with open(os.path.join(path, dirname,
                  'ws_measurement_{0}.pickle'.format(dirname)), 'r') as pickle_file:
            sig_dict = pickle.load(pickle_file)
            sigs.append(sig_dict['combined'])
    return sigs


# overall combination
pvalues = map(gaus_cdf, get_sigs(bdt_path, 'combination'))
c = Canvas()
_, graphs = pvalue_plot(
    masses, pvalues, pad=c, xtitle='m_{H} [GeV]',
    linestyle='solid')
"""
for name, graph in zip(names, graphs):
    graph.title = name
    graph.legendstyle = 'L'
leg = Legend(graphs, leftmargin=0.4, topmargin=0.2)
leg.Draw()
"""
ATLAS_label(0.57, 0.88, text="Internal", sqrts=None, pad=c, sep=0.09)
c.SaveAs('pvalue_plot.png')
