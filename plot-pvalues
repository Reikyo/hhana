#!/usr/bin/env python

from mva import save_canvas
from statstools.pvalue_plot import pvalue_plot
from rootpy.plotting import Canvas, Legend, set_style
from rootpy.plotting.style.atlas.labels import ATLAS_label
import pickle
import os
import ROOT

set_style('ATLAS', shape='rect')
gaus_cdf = ROOT.Math.gaussian_cdf_c

bdt_path = 'workspaces/hh_nos_nonisol_ebz_mva_fixed'
single_bdt_path = 'workspaces/hh_nos_nonisol_ebz_mva_single_bdt_125_fixed'
cut_path = 'workspaces/hh_nos_nonisol_ebz_cuts_fixed'
masses = range(100, 155, 5)
colors = ['black', 'red', 'blue', 'purple', 'darkgreen']
lines = ['solid', 'dashed', 'dotted', 'dashdot', 'longdash', 'verylongdash']


def get_sigs(path, category, year=None, meas=True):
    if year is None:
        dir_pattern = 'hh_{0}_{{0}}'.format(category)
    else:
        dir_pattern = 'hh_{0}_{1}_{{0}}'.format(year % 1000, category)
    sigs = []
    for mass in masses:
        dirname = dir_pattern.format(mass)
        with open(os.path.join(path, dirname,
                  '{1}{0}.pickle'.format(dirname, 'measurement_' if meas else '')), 'r') as pickle_file:
            sig_dict = pickle.load(pickle_file)
            sigs.append(sig_dict['combined'])
    return sigs


def plot(name, curves, labels):
    c = Canvas()
    _, graphs = pvalue_plot(
        masses, curves, pad=c, xtitle='m_{H} [GeV]',
        linestyle=lines, linecolor=colors,
        yrange=(gaus_cdf(2.5), 50))
    for label, graph in zip(labels, graphs):
        graph.title = label
        graph.legendstyle = 'L'
    leg = Legend(graphs, leftmargin=0.4,
                 topmargin=0.1, margin=0.15,
                 textsize=20)
    leg.Draw()
    ATLAS_label(0.75, 0.88, text="Internal", sqrts=None, pad=c, sep=0.09)
    save_canvas(c, 'plots/pvalues', name, formats=('.eps', '.png'))

# compare single BDT vs multiple trainings
bdt_combined = map(gaus_cdf, get_sigs(bdt_path, 'combination'))
single_bdt_combined = map(gaus_cdf, get_sigs(single_bdt_path, 'combination', meas=False))
plot('compare_single_multi', [bdt_combined, single_bdt_combined], ['Multi-BDT', '125 GeV BDT'])

# overall combination
bdt_combined = map(gaus_cdf, get_sigs(bdt_path, 'combination'))
cut_combined = map(gaus_cdf, get_sigs(cut_path, 'combination'))
plot('comination', [bdt_combined, cut_combined], ['MVA 7+8 TeV', 'CBA 7+8 TeV'])

# 7TeV combination
bdt_combined_11 = map(gaus_cdf, get_sigs(bdt_path, 'combination', year=11))
cut_combined_11 = map(gaus_cdf, get_sigs(cut_path, 'combination', year=11))
plot('comination_11', [bdt_combined_11, cut_combined_11], ['MVA 7 TeV', 'CBA 7 TeV'])

# 8TeV combination
bdt_combined_12 = map(gaus_cdf, get_sigs(bdt_path, 'combination', year=12))
cut_combined_12 = map(gaus_cdf, get_sigs(cut_path, 'combination', year=12))
plot('comination_12', [bdt_combined_12, cut_combined_12], ['MVA 8 TeV', 'CBA 8 TeV'])

# vbf combination
bdt_combined_vbf = map(gaus_cdf, get_sigs(bdt_path, 'vbf'))
cut_combined_vbf = map(gaus_cdf, get_sigs(cut_path, 'cuts_vbf'))
plot('comination_vbf', [bdt_combined_vbf, cut_combined_vbf], ['MVA VBF 7+8 TeV', 'CBA VBF 7+8 TeV'])

# 7TeV vbf
bdt_vbf_11 = map(gaus_cdf, get_sigs(bdt_path, 'vbf', year=11))
cut_vbf_11 = map(gaus_cdf, get_sigs(cut_path, 'cuts_vbf', year=11))
plot('vbf_11', [bdt_vbf_11, cut_vbf_11], ['MVA VBF 7 TeV', 'CBA VBF 7 TeV'])

# 8TeV vbf
bdt_vbf_12 = map(gaus_cdf, get_sigs(bdt_path, 'vbf', year=12))
cut_vbf_12 = map(gaus_cdf, get_sigs(cut_path, 'cuts_vbf', year=12))
plot('vbf_12', [bdt_vbf_12, cut_vbf_12], ['MVA VBF 8 TeV', 'CBA VBF 8 TeV'])

# boosted combination
bdt_combined_boosted = map(gaus_cdf, get_sigs(bdt_path, 'boosted'))
cut_combined_boosted = map(gaus_cdf, get_sigs(cut_path, 'cuts_boosted'))
plot('comination_boosted', [bdt_combined_boosted, cut_combined_boosted], ['MVA Boosted 7+8 TeV', 'CBA Boosted 7+8 TeV'])

# 7TeV boosted
bdt_boosted_11 = map(gaus_cdf, get_sigs(bdt_path, 'boosted', year=11))
cut_boosted_11 = map(gaus_cdf, get_sigs(cut_path, 'cuts_boosted', year=11))
plot('boosted_11', [bdt_boosted_11, cut_boosted_11], ['MVA Boosted 7 TeV', 'CBA Boosted 7 TeV'])

# 8TeV boosted
bdt_boosted_12 = map(gaus_cdf, get_sigs(bdt_path, 'boosted', year=12))
cut_boosted_12 = map(gaus_cdf, get_sigs(cut_path, 'cuts_boosted', year=12))
plot('boosted_12', [bdt_boosted_12, cut_boosted_12], ['MVA Boosted 8 TeV', 'CBA Boosted 8 TeV'])

# 7, 8 and total
plot('7_8_final_mva', [bdt_combined_11, bdt_combined_12, bdt_combined], ['MVA 7 TeV', 'MVA 8 TeV', 'MVA 7+8 TeV'])
plot('7_8_final_cba', [cut_combined_11, cut_combined_12, cut_combined], ['CBA 7 TeV', 'CBA 8 TeV', 'CBA 7+8 TeV'])
